// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Student {
  id                  Int               @id @default(autoincrement())
  name                String
  familyName          String
  dateOfBirth         DateTime
  gender              String
  internalPhotoAllowed Boolean
  externalPhotoAllowed Boolean
  medicalNotes        String?
  yearEnteredReception Int
  parent              Parent[]
  courses             Course[]
  attendance          Attendance[]
  term                Term[]      
  report              Report[]
  mentor              Mentor[] 
  @@unique([name, familyName, dateOfBirth])
}

model Parent {
  name     String
  lastName String
  email    String    @id
  students Student[]
}

model Course {
  id           Int               @id @default(autoincrement())
  name         String
  term         Term  @relation(fields: [term_id], references: [id])
  term_id      Int
  ageGroup     String
  students     Student[]
  topics       Topic[]
  show         Boolean
  @@unique([name, term_id])
}

model Calendar {
  title   String
  date    DateTime
  private Boolean

  @@unique([title,date])
}

model Attendance {
  student_id  Int
  student     Student   @relation(fields: [student_id], references: [id])
  date        DateTime
  class1      AttendanceState?
  class2      AttendanceState?
  class3      AttendanceState?
  class4      AttendanceState?

  @@unique([student_id, date])
}

model Topic {
  id     Int      @id @default(autoincrement())
  course Course[]
  title   String
  description   String?

}

model Report {
  id      Int  @id
  create_date DateTime
  report  String
  term    Term  @relation(fields: [term_id], references: [id])
  term_id Int
  type    ReportType
  student Student[]
  sub_type ReportSubType
  authour Staff


}

model Term {
  id    Int  @id
  students    Student[]
  courses     Course[]
  reports     Report[]
}

model Staff {
  name        String
  full_name   String
  email       String @unique
  ...

}

model House {
  name String
  term Term
  students Student[]
  point   Int

  @@unique([name,term])
}

model Mentor {
  id  Int  @id  @default(autoincrement())
  mentor Staff
  students Student[]
}

model Registration {
  id Int @id @default(autoincrement())
  parent Parent
  student Student
  islamic_choice_1 Course
  islamic_choice_2 Course
  islamic_choice_3 Course
  skill_choice_1 Course
  skill_choice_2 Course
  skill_choice_3 Course
  sport_choice_1 Course
  sport_choice_2 Course
  sport_choice_3 Course
  language_choice_1 Course?
  language_choice_2 Course?
  language_choice_3 Course?


  terms          Boolean
  payRef         Int?
  payTime        DateTime?

}



enum AttendanceState {
  ontime
  absent
  late
}

enum ReportType {
  teacher
  ...
}

enum ReportSubType {
  class
  ...
}
